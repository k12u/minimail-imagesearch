== 実習/マルチメディア検索 ==

1. 超シンプルな画像検索を実装してみる
  1. 文字を使って画像検索 (間接検索)
    1. よく提供されているが意外と難しい
    1. ユーザはとりあえず手軽に使ってみることができる
  1. 画像を使って画像検索 (直接検索)
    1. 実はアルゴリズム的には単純
    1. ユーザが試すのが敷居が高い
    1. あまり有効なアプリケーションがない？
      1. 例えば：業務で使うなら
        1. 画像目視チェックの優先度をつけるのに使える？
          1. ex.「肌色画像」
    1. 実装の内容の紹介
      1. 検索エンジンを作る流れ
        1. メディアデータを登録して
        1. 画像の特徴を抽出して
        1. クエリを入力して (色 or 画像で)
        1. 類似度を計算して
        1. 類似度順にソート
      1. なぜ Imager か
        1. 使ってみたかったから
        1. 使ってみると(今回やりたいことが簡単にできて)意外に便利

      1. メタデータの取得方法
        1. 色ヒストグラム
          1. 丸める
            1. <a href="量子化.png"></a>
          1. 重み付け
            1. tfidf的手法
            1. 中心からの距離
            1. etc... (*宿題*)
        1. 表色系
          1. RGB
            1. おなじみ
            1. データ表現が直感的なのでとりあえず扱いやすい
            1. 人間の感覚とは関係ない尺度なので、計算してみた結果が不自然なことがある。
               1. 例：色 A と色 B の中間色 C を求めたが直感に反する
          1. HSV
            1. 色相(Hue)/彩度(Saturation)/明度(Value)
            1. 視覚的な表現に使う場合はRGBよりもHSVで計算したほうが良い場合が多い
            1. (*宿題*)
          1. and so on...
      1. 類似度の計算方法
        1. ベクトル間のcosine (内積)
        1. ベクトル間の距離
          1. (*宿題*)
      1. 今回はプリミティブな説明にするために Imager を使いましたが OpenCV ではかなり
       応用的な処理ができたりするので使ってみるのも面白いと思います。
  1. 機会学習系の手法
    1. すごくたくさんあるけど、よく知らないのでキャッチーな例
      1. Bijostagram
        1. http://d.hatena.ne.jp/hirotmb/20110317/1300330359

  1. この勉強会の限界
    1. 今回は超簡単・シンプルな実装例を示しました。
    1. 著者は画像処理の専門家ではありません
    1. 画像処理・画像検索は重厚な歴史があるので大量の著作・論文がありますので詳しく知りたい方は
       勉強してみると面白いと思います。
       1. あまり知識がないのでちゃんとした紹介ができません。。
